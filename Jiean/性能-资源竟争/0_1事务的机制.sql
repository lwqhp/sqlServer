

--事务

/*
如果有人问你什么事务，你或许很容易解释，因为事务我们日常使用到。

事务就是作为单个‘逻辑工作单元’执行的一系列操作。一个select 语句，一个begin tran 都是一个事务。
事务具有ACID特性
1）原子性：要么全部执行，要么全都不执行。
2）一致性：事务在完成时，必须使所有的数据都保持一致状态。
3）隔离性：同一时间，只能有一个事务修改当前数据。
4）持久性：事务完成后，它对系统的影响是永久性的

*/
--4.1）原子性------------------------------------------------------------------------------------------------
/*一条查询语句就是一个独立的逻辑工作单元，具有完整的原子性，比如insert操作，只要有一笔记录失败，整
个插入更作都会失败
begin tran开启一个事务，事务只负责把多个语句作业一个大的逻辑工作单元，统一是提交还是回滚，但sqlserver
默认的错误机制并不会影响各语句的执行，除非错误级别在16以上的致命错误，执行强制退出，否则事务会继续往
下执行

*/
BEGIN TRAN 
SELECT 1/0
SELECT * FROM dbo.eee
COMMIT TRAN 
SELECT @@trancount

/*有两个方法可以觖决这个问题：
1）显示声明事务级别 
Set Xact_abort_on 在事务中有语句失败时自动回滚

2)显式捕捉错误并回滚，比如@@error,begin try */


--4.2）一致性产生阻塞-----------------------------------------------------------------------------------------
/*
是指一个逻辑工作单元使数据库的状态从一个一致状态转换到另一个一致状态，在事务结束时，不管是提交，还是回滚，
事务对数据库的影响是一致的。也就是说，当事务开启时，查询所要使用的对象将被隔离，直到所有的事务完成。
当然，这只是理想的执行过程中没有任何的错误发生。
*/

--4.3）隔离性------------------------------------------------------------------------------------------------
/*隔离，是对事务的隔离，因为事务通常是多语句的工作单元，必须对共同占用的资源的事务进行隔离，以保证事务的
一致性，可见，事务的范围越大，受影响的事务也就越大。（经常出现阻塞，会不会就是事务的范围太大了啊）
一个事务不能看到其他处于中间状态的事务的数据，但能看到事务开始前或结束后的数据
*/

--4.4）持久性------------------------------------------------------------------------------------------------
/*
事务完成时，对数据库所做的操作是持久的，这意味着，当事务完成时，会将所有所做的修改写到事务日志中，并写入
磁盘日志文件，并在下一个checkpoint点，把修改数据更新磁盘数据文件，这里叫下‘前滚’：当事务已完成，但内存中的
数据还没有更新到磁盘上时，出现的意外造成数据库死机或重启，在重启期间，sqlserver会根据日志文件重写磁盘数据文件
，以保存日志文件和数据文件的状态一致，这就叫前滚。
*/

/*
总结：原子性会影响事务内语句的执行过程，所以要做好语句的业务逻辑以及错语处理
一致性和隔离性在资源和事务上产生隔离，占用过长时间的资源以及事务的范转过大，都会产生阻塞
持久性虽不会直接产生阻塞，但因持久性要求在磁盘上的事务日志中保存数据修改前后的映像，这增加了事务和阻塞的持续时间。
*/


