<?xml version="1.0" encoding="utf-8"?>

<root>
  <control1>了解sql server 如何与客户端通信，从数据访问的源头上防止客户端访问</control1>
  <control2>sql server 需要验证客户端发送来的连接请求的用户身份.</control2>
  
  <startServer>启动SqlServer的帐号</startServer>
  <securModel>
    <a1>仅windows模式</a1>
    <a2>SQL和windows身份验证模式</a2>
  </securModel>

  <TOP>服务器通过登陆帐号管理连接，（每一个帐号对应到服务器上一个登陆ID）,通过角色来管理数据库操作权限。</TOP>
  <part>
    <server>服务器角色：用于对登陆授于服务器范围内权限</server>
    <USER>数据库角色：为映射到此登陆名的用户，指定对数据库权限详细描述</USER>
  </part>
  <setRight>
    <RIGHT>管理权限（服务器角色），操作权限（数据库角色）</RIGHT>
    <SET>授于（对象用户），拒绝（对象库表），撒消，特性：层叠和继承</SET>
    <rightTable>sysProtects表</rightTable>
  </setRight>

  <serverinfo title="服务器角色">
    sysadmin   在   SQL   Server   中进行任何活动。该角色的权限跨越所有其它固定服务器角色。
    serveradmin   配置服务器范围的设置。
    setupadmin   添加和删除链接服务器，并执行某些系统存储过程（如   sp_serveroption）。
    securityadmin   管理服务器登录。
    processadmin   管理在   SQL   Server   实例中运行的进程。
    dbcreator   创建和改变数据库。
    diskadmin   管理磁盘文件。
    bulkadmin   执行   BULK   INSERT   语句。
  </serverinfo>
  <userinfo title="用户固定角色">
    db_owner   数据库所有者
    db_accessadmin   数据库访问管理员
    db_securityadmin   数据库安全管理员
    db_ddladmin   数据库   DDL   管理员
    db_backupoperator   数据库备份操作员
    db_datareader   数据库数据读取者
    db_datawriter   数据库数据写入者
    db_denydatareader   数据库拒绝数据读取者
    db_denydatawriter   数据库拒绝数据写入者
  </userinfo>
  <other>
    <PUBLIC title="角色">
      如果已经授予某个用户访问数据库的权限，该用户将自动被　
      放到public角色中，而不能从该角色删除。这时，该用户将保留该角色的所有权限。
      由于这个原因，你决不应该向public角色指默认情况下没有授予它的任何权限。
      如果向public角色授予权限，你将无法显式地授予用户访问对象的权限。要特别提防对这个角色的拒绝权限。
      如果拒绝public角色的权限，你将拒绝每个用户(sysadmin角色的成员例外)访问该对象
    </PUBLIC>
    <guset title="帐户">
      是一个虚拟用户，当授予他访问某个数据库的权限时，他将把该类权限赋驰服务器上的所有登录。
      例如，如果允许guest帐户访问你的数据库，服务器上的每个登录都将被授予访问该数据库的权限和public角色的所有权限，
      虽然他指服务器上的某个登录没有被　授予访问该数据库的权限。这个危险的用户应该尽可能从每个数据库中删除。
      在默认情况下，该用户没有被　添加到数据库中。
    </guset>
  </other>

</root>
