

--主键

/*
主键对于一张表来说非常重要，甚至必需的部份，主键是数据库确保数据行在整张表中唯一性的保障，它是定位到一条记录并且
确保不会重复存储的逻辑机制，主键同时也是被外键引用来建立表与之间的关系。

那如何才能创建一个好的主键呢?

首先，我们来说说什么是主键，什么是不好的主键，不好的主键存在那些弊端,然后说下主键有那些创建方法，各有什么优缺点。

1）主键是在表设计时创建的唯一约束，关键字为primary key,当定义字段为主键时，本质为创建一个唯一约束unique,
和一个聚集索引，而主键和单独建唯一约束和聚集索引的区别是主键还不允许为空。


2）是不是所有的表格都需要创键主键呢？如果表格只有短短的几行到几十记录，而且每次查找几乎都要查找全部记录或大部份记录。
在这样的表上创建主键，除了对表唯一约束外，在性能上没有什么有价值的付出，还增强了索引维护的工作量。

3)需要一个什么样的主键
当你看到这样一个问题时,你的大脑中是不是第一反映,建个identity自增列，如果是，那你已掉入一个反模式思维中：identity简单，
唯一标识记录行，不需要写代码去维护主键，省事，外键也能用。


当我们在考虑使用identity做主键的时候，我们真需要认真的静静的想一下，真的需要这样一个主键吗，我们建主键的目的，只是为
了简单的查找吗，我们允许记录的重复保存吗，我们需要主键的连接排号吗，我们需要取最大值记录吗，如果你的回答肯定，那么
也许你正需要一identity主键。

但如果不是，我们就要该考虑选择一个什么样的主键：在记录中有没有可以肯定且必须唯一的字段，在查询条件中是否有经常和主键
一起查询的字段，如何让主键能更好的和其它表或其它类型的主键区分开来。

建议：
1）不管在什么情况下，如果表中记录已经存在一个能唯一标识记录的字段，且不是较长或中文的字段，都不要另建identity主键， 这是
一个冗余键值。

2）如果存在主键常和某几个字段一起作为查询条件的话，创建一个组合键主键，把相关字段加进来，或许是个比较不错的选择。

3）单一的数字序列不能很好的区分各类模块的含义，一个复合主键值是个不错的选择，
比如全局统一000000000001
不同的帐套 ：公司+序号 PT0001

在定义主键的名称的时候，你是不是随手就敲上ID，或者类似缩写的sid,cid,pid等等，如果是，你正在误入反模式中.
对于这样ID命名，我自己也是深有感触，在产品表中建了一个pid主键,到后面，发现其它表也需要一个这样的pid，来表示父节点，
的业务逻辑中，一次偶遇，这两个pid同时出现了，这非常让人抓狂，因为有时候自己也搞不清楚关联的两个pid是主外键关联？
还是层次关联。你甚至想换一个名称，但是想想要换一个主键名称而需要修改的代码量，你还有勇气下决定吗。

建议：
1）为主键选择更有意议的名称：一个能够反应这个主键所代表的实体的类型的名字，且不要使用缩写表示，外键应该尽可能地和
所引用的列使用相同的名称，一个主键名称应该在整个数据库的设计中唯一，任意两张表都不应该使用相同的名称来定义主键，
除非其中之一引用了另一个作为外键。
比如 店铺ID shopID
	用户:userID
	供应商：vendcustID



*/





